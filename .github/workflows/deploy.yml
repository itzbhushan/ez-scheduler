name: CI/CD Pipeline

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]

jobs:
  lint:
    runs-on: ubuntu-latest
    # Run linting on pull requests
    if: github.event_name == 'pull_request'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install UV
      run: curl -LsSf https://astral.sh/uv/install.sh | sh
    
    - name: Install dependencies
      run: uv sync --extra dev
      working-directory: ./server
    
    - name: Run Black (formatting check)
      run: uv run black --check .
      working-directory: ./server
    
    - name: Run isort (import sorting check)
      run: uv run isort --check-only .
      working-directory: ./server

  deploy-staging:
    runs-on: ubuntu-latest
    # Deploy to staging ONLY on pull requests, after linting passes
    if: github.event_name == 'pull_request'
    needs: lint

    steps:
    - uses: actions/checkout@v4

    - name: Install Railway CLI
      run: npm install -g @railway/cli

    - name: Deploy to Railway Staging
      run: railway up --detach --service ez-scheduler-staging
      env:
        RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN_STAGING }}
      working-directory: ./server

  deploy-production:
    runs-on: ubuntu-latest
    # Only deploy to production when code is merged to main branch
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
    - uses: actions/checkout@v4

    - name: Install Railway CLI
      run: npm install -g @railway/cli

    - name: Deploy to Railway Production (TEMPORARILY DISABLED)
      run: echo "Production deployment temporarily disabled. Staging deployment completed successfully."
      # Uncomment the lines below when ready to enable production deployment:
      # run: railway up --detach --service ez-scheduler-production
      # env:
      #   RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN_PRODUCTION }}
      # working-directory: ./server
